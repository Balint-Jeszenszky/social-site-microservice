version: "3.3"

services:
  traefik:
    image: traefik:v2.5
    restart: always
    container_name: traefik
    ports:
      - "80:80"
      - "8085:8080"
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=web
      - --entrypoints.web.address=:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.service=api@internal"
    
  static:
    image: httpd:2.4
    restart: always
    container_name: static
    volumes:
      - ./social-site-frontend/dist/social-site-frontend:/usr/local/apache2/htdocs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.root.entrypoints=web"
      - "traefik.http.routers.root.rule=Path(`/`)"
      - "traefik.http.routers.static.entrypoints=web"
      - "traefik.http.routers.static.rule=Path(`/{[\\.a-zA-Z0-9]+\\.{1}(js|css|ico|html){1}}`)"
    networks:
      - web
      
  auth-db:
    image: postgres:14
    restart: always
    container_name: auth-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=DevPass0
      - POSTGRES_DB=users
    volumes:
      - ./auth-db:/var/lib/postgresql/data
    networks:
      - backend

  auth:
    image: openjdk:11-jre-stretch
    restart: always
    container_name: auth
    depends_on:
      - auth-db
    command: "java -jar /usr/local/app/auth-0.0.1-SNAPSHOT.jar"
    volumes:
      - "./auth/target/auth-0.0.1-SNAPSHOT.jar:/usr/local/app/auth-0.0.1-SNAPSHOT.jar"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.auth.loadbalancer.server.port=8080"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.routers.auth.rule=PathPrefix(`/api/auth`)"
    networks:
      - web
      - backend
      
  social-db:
    image: postgres:14
    restart: always
    container_name: social-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=DevPass0
      - POSTGRES_DB=social
    volumes:
      - ./social-db:/var/lib/postgresql/data
    networks:
      - backend

  social:
    image: openjdk:11-jre-stretch
    restart: always
    container_name: social
    depends_on:
      - social-db
    command: "java -jar /usr/local/app/social-0.0.1-SNAPSHOT.jar"
    volumes:
      - "./social/target/social-0.0.1-SNAPSHOT.jar:/usr/local/app/social-0.0.1-SNAPSHOT.jar"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.social.loadbalancer.server.port=8081"
      - "traefik.http.routers.social.entrypoints=web"
      - "traefik.http.routers.social.rule=PathPrefix(`/api/social`)"
    networks:
      - web
      - backend
  
  media-db:
    image: mongo:5
    restart: always
    container_name: media-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: DevPass0
    volumes:
      - ./media-db:/data/
    networks:
      - backend
  
  media:
    image: node:16.13
    restart: always
    container_name: media
    build: ./media/build
    command: npm start
    depends_on:
      - media-db
    volumes:
      - ./media/build:/usr/app/
    networks:
      - web
      - backend

networks:
  web:
    external: true
  backend:
    external: false
    
volumes:
  static:
    driver: local
  auth:
    driver: local
  auth-db:
    driver: local
  social:
    driver: local
  social-db:
    driver: local

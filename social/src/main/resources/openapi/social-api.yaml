openapi: 3.0.0
info:
  title: social-api
  version: '1.0'
  contact:
    name: Balint Jeszenszky
  description: Social service
servers:
  - url: 'http://localhost/api/social'
    description: docker
  - url: 'http://localhost:8081/api/social'
    description: local
paths:
  '/post/{postId}':
    parameters:
      - schema:
          type: integer
        name: postId
        in: path
        required: true
    put:
      summary: ''
      operationId: put-post-postId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDto'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
      description: edit post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPostDto'
      tags:
        - post
    delete:
      summary: ''
      operationId: delete-post-postId
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
      description: delete post
      tags:
        - post
  /post:
    post:
      summary: ''
      operationId: post-post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDto'
        '400':
          description: Bad Request
      description: Create new post
      tags:
        - post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPostDto'
  /post/all:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostDto'
      operationId: get-post-all
      description: Get all friends posts
  '/post/all/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostDto'
      operationId: get-post-all-userId
      description: Get posts from user
components:
  schemas:
    NewPostDto:
      title: NewPostDto
      type: object
      properties:
        text:
          type: string
      required:
        - text
    PostDto:
      title: PostDto
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        user:
          $ref: '#/components/schemas/UserDetailsDto'
        created:
          type: string
          format: date-time
      required:
        - id
        - text
        - user
        - created
    UserDetailsDto:
      title: UserDetailsDto
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
      required:
        - id
        - username
        - firstname
        - lastname
        - email
  securitySchemes: {}
tags:
  - name: post
